{"ast":null,"code":"import NextAuth from 'next-auth';\nimport Providers from 'next-auth/providers';\nimport { fauna } from '../../../services/fauna';\nimport { query as q } from 'faunadb';\nexport default NextAuth({\n  //Configure one or more authentication providers\n  providers: [Providers.GitHub({\n    clientId: process.env.GITHUB_CLIENT_ID,\n    clientSecret: process.env.GITHUB_CLIENT_SECRET,\n    scope: 'read:user'\n  })],\n  callbacks: {\n    async signIn(user, account, profile) {\n      const {\n        email\n      } = user;\n\n      try {\n        //inserção no banco de dados FaunaDB\n        await fauna.query(q.Create(q.Collection('users'), {\n          data: {\n            email\n          }\n        })); //se correr tudo bem, autenticação prossegue normalmente\n\n        return true;\n      } catch {\n        //se der errado, vai dar um erro\n        return false;\n      }\n    }\n\n  }\n});","map":{"version":3,"sources":["C:/Users/ricop/Documents/ignitenext/ignews/src/pages/api/auth/[...nextauth].ts"],"names":["NextAuth","Providers","fauna","query","q","providers","GitHub","clientId","process","env","GITHUB_CLIENT_ID","clientSecret","GITHUB_CLIENT_SECRET","scope","callbacks","signIn","user","account","profile","email","Create","Collection","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAIA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,KAAK,IAAIC,CAAlB,QAA2B,SAA3B;AAEA,eAAeJ,QAAQ,CAAC;AACpB;AACAK,EAAAA,SAAS,EAAC,CACNJ,SAAS,CAACK,MAAV,CAAiB;AACbC,IAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADT;AAEbC,IAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFb;AAGbC,IAAAA,KAAK,EAAE;AAHM,GAAjB,CADM,CAFU;AAUpBC,EAAAA,SAAS,EAAE;AACP,UAAMC,MAAN,CAAaC,IAAb,EAAmBC,OAAnB,EAA4BC,OAA5B,EAAoC;AAChC,YAAM;AAAEC,QAAAA;AAAF,UAAYH,IAAlB;;AAEA,UAAG;AACC;AACA,cAAMd,KAAK,CAACC,KAAN,CACFC,CAAC,CAACgB,MAAF,CACIhB,CAAC,CAACiB,UAAF,CAAa,OAAb,CADJ,EAEI;AAACC,UAAAA,IAAI,EAAE;AAAEH,YAAAA;AAAF;AAAP,SAFJ,CADE,CAAN,CAFD,CAQC;;AACA,eAAO,IAAP;AACH,OAVD,CAUE,MAAK;AACH;AACA,eAAO,KAAP;AACH;AAGJ;;AApBM;AAVS,CAAD,CAAvB","sourcesContent":["import NextAuth from 'next-auth'\r\nimport Providers from 'next-auth/providers'\r\nimport { callbackify } from 'node:util'\r\nimport { signIn } from 'next-auth/client';\r\n\r\nimport { fauna } from '../../../services/fauna'\r\nimport { query as q } from 'faunadb'\r\n\r\nexport default NextAuth({\r\n    //Configure one or more authentication providers\r\n    providers:[\r\n        Providers.GitHub({\r\n            clientId: process.env.GITHUB_CLIENT_ID,\r\n            clientSecret: process.env.GITHUB_CLIENT_SECRET,\r\n            scope: 'read:user'\r\n        }),\r\n        \r\n    ],\r\n    callbacks: {\r\n        async signIn(user, account, profile){\r\n            const { email } = user\r\n\r\n            try{\r\n                //inserção no banco de dados FaunaDB\r\n                await fauna.query(  \r\n                    q.Create(\r\n                        q.Collection('users'),\r\n                        {data: { email }}\r\n                    )\r\n                )\r\n                //se correr tudo bem, autenticação prossegue normalmente\r\n                return true  \r\n            } catch{\r\n                //se der errado, vai dar um erro\r\n                return false\r\n            }\r\n\r\n            \r\n        }\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}